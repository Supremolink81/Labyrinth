void texturedCube(float x,float y,float z,PImage texture,float size){
  world.pushMatrix();
  world.beginShape(QUADS);
  world.translate(x,y,z);
  world.scale(size);
  world.noStroke();
  world.texture(texture);
  //top
  world.vertex(0,0,0,0,0);
  world.vertex(1,0,0,1,0);
  world.vertex(1,0,1,1,1);
  world.vertex(0,0,1,0,1);
  //bottom
  world.vertex(0,1,0,0,0);
  world.vertex(1,1,0,1,0);
  world.vertex(1,1,1,1,1);
  world.vertex(0,1,1,0,1);
  //right
  world.vertex(0,0,0,0,0);
  world.vertex(0,0,1,1,0);
  world.vertex(0,1,1,1,1);
  world.vertex(0,1,0,0,1);
  //left
  world.vertex(1,0,0,0,0);
  world.vertex(1,0,1,1,0);
  world.vertex(1,1,1,1,1);
  world.vertex(1,1,0,0,1);
  //front
  world.vertex(0,0,1,0,0);
  world.vertex(1,0,1,1,0);
  world.vertex(1,1,1,1,1);
  world.vertex(0,1,1,0,1);
  //back
  world.vertex(0,0,0,0,0);
  world.vertex(1,0,0,1,0);
  world.vertex(1,1,0,1,1);
  world.vertex(0,1,0,0,1);
  world.endShape();
  world.popMatrix();
}
void texturedCube(float x,float y,float z,PImage top,PImage bottom,PImage side,float size){
  pushMatrix();
  translate(x,y,z);
  scale(size);
  noStroke();
  //top
  beginShape(QUADS);
  texture(top);
  vertex(0,0,0,0,0);
  vertex(1,0,0,1,0);
  vertex(1,0,1,1,1);
  vertex(0,0,1,0,1);
  endShape();
  //bottom
  beginShape(QUADS);
  texture(bottom);
  vertex(0,1,0,0,0);
  vertex(1,1,0,1,0);
  vertex(1,1,1,1,1);
  vertex(0,1,1,0,1);
  endShape();
  //right
  beginShape(QUADS);
  texture(side);
  vertex(0,0,0,0,0);
  vertex(0,0,1,1,0);
  vertex(0,1,1,1,1);
  vertex(0,1,0,0,1);
  //left
  vertex(1,0,0,0,0);
  vertex(1,0,1,1,0);
  vertex(1,1,1,1,1);
  vertex(1,1,0,0,1);
  //front
  vertex(0,0,1,0,0);
  vertex(1,0,1,1,0);
  vertex(1,1,1,1,1);
  vertex(0,1,1,0,1);
  //back
  vertex(0,0,0,0,0);
  vertex(1,0,0,1,0);
  vertex(1,1,0,1,1);
  vertex(0,1,0,0,1);
  endShape();
  popMatrix();
}
